package pt.test;

import pt.runtime.TaskID;
import android.os.Bundle;
import android.os.Handler;
import android.app.Activity;
import android.text.Editable;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.*;

public class ParaTaskProgressBarActivity extends Activity {
	ProgressBar myBarHorizontal;
	ProgressBar myBarCircular;
	TextView lblTopCaption;
	EditText txtDataBox;
	Button btnDoSomething;
	Button btnDoItAgain;
	
	int globalVar = 0;

	boolean isRunning = false;
	String PATIENCE = "Background task is running."
			+ "\nPlease be patient...";

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_para_task_progress_bar);
		lblTopCaption = (TextView) findViewById(R.id.lblTopCaption);
		myBarHorizontal = (ProgressBar) findViewById(R.id.myBarHor);
		myBarCircular = (ProgressBar) findViewById(R.id.myBarCir);
		txtDataBox = (EditText) findViewById(R.id.txtBox1);
		txtDataBox.setHint("Foreground interaction\nEnter some words here...");

		btnDoItAgain = (Button) findViewById(R.id.btnDoItAgain);
		btnDoItAgain.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				onStart();
			}// onClick
		});// setOnClickListener
		btnDoSomething = (Button) findViewById(R.id.btnDoSomething);
		btnDoSomething.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				Editable text = txtDataBox.getText();
				Toast.makeText(
						getBaseContext(),
						"You said >> \n" + text, 1).show();
			}// onClick
		});// setOnClickListener
	}// onCreate

	@Override
	protected void onStart() {
		super.onStart();
		// prepare UI components
		lblTopCaption.setText("Background task starts ...");
		txtDataBox.setText("");
		btnDoItAgain.setEnabled(false);

		// reset and show progress bars
		myBarHorizontal.setMax(100);
		myBarHorizontal.setProgress(0);
		myBarHorizontal.setVisibility(View.VISIBLE);
		myBarCircular.setVisibility(View.VISIBLE);

		TaskID taskid = backgroundTask()
				notifyInterim(receiveProgress(TaskID,String))
				notify(onTaskComplete())
				asyncCatch(InterruptedException handleInterruptedException(TaskID),
						Throwable handleAllThrowables(TaskID));
	}
	
	private void receiveProgress(TaskID id, String info) {
		// update UI, observe globalVar is changed in background task
		lblTopCaption.setText(PATIENCE + "\nCurrent progress: " + id.getProgress()
							+ "%  globalVar: " + globalVar + "\nInterim info: " + info);
		// advance ProgressBar
		myBarHorizontal.setProgress(id.getProgress());
	}

	private void onTaskComplete() {
		lblTopCaption.setText("Background task done!");
		myBarHorizontal.setVisibility(View.INVISIBLE);
		myBarCircular.setVisibility(View.INVISIBLE);
		btnDoItAgain.setEnabled(true);
	}
	
	private void handleInterruptedException(TaskID id) {
		Log.e("exception in background task: ", id.getException().getMessage());
	}
	
	private void handleAllThrowables(TaskID id) {
		Toast.makeText(getApplication(), "Exception caught in background task:\n" 
				+ id.getException().getMessage(), 1).show();
	}
	
	TASK private void backgroundTask() throws InterruptedException {
		// busy work goes here...
			int max = 20;
			for (int n = 0; n < max; n++) {
				// this simulates 1 sec. of busy activity
				Thread.sleep(500);
				// change a global variable from here...
				globalVar++;
				// try: next two UI operations should NOT work
				// Toast.makeText(getApplication(), "Hi ", 1).show(); //
				// txtDataBox.setText("Hi ");
				
				int progress = (int) ((n + 1.0) / max * 100);
				CurrentTask.setProgress(progress);
        		CurrentTask.publishInterim("Task Thread ID " + CurrentTask.currentThreadID());
        		
        		if (globalVar % 35 == 0)
        			throw new RuntimeException("Catch me if you can! globalVar: " + globalVar);
			}
	}
}// ParaTaskProgressBarActivity
