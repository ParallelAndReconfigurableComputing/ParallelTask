package pt.examples.paraservice;

import pt.runtime.ParaTask;
import pt.runtime.TaskID;
import android.app.Service;
import android.content.Intent;
import android.os.IBinder;
import android.util.Log;
import android.widget.Toast;

public class ParaService extends Service {
	private final static String LOG_TAG = ParaService.class.getCanonicalName();
	
	int globalVar = 0;

	@Override
	public IBinder onBind(Intent intent) {
		// TODO: Return the communication channel to the service.
		throw new UnsupportedOperationException("Not yet implemented");
	}
	
	
	@Override
    public void onCreate() {
		Log.i(LOG_TAG, "ParaTask onCreate");
		Thread t = Thread.currentThread();
        Toast.makeText(this, "onCreate Current thread id: "
        		+ t.getId() + " name: " + t.getName() + "\n ParaTask EDT id: "
        		+ ParaTask.getEDT().getId() + " name: " + ParaTask.getEDT().getName(),
        		Toast.LENGTH_LONG).show();
    }
 
    @Override
    public void onStart(Intent intent, int startId) {
    	Log.i(LOG_TAG, "ParaTask onStart");
    	
        Toast.makeText(this, "ParaService Started", Toast.LENGTH_LONG).show();
        
		TaskID taskid = countingTask()
				notifyInterim(receiveProgress(TaskID,String))
				notify(onTaskComplete())
				asyncCatch(InterruptedException handleInterruptedException(TaskID),
						Throwable handleAllThrowables(TaskID));
    }
    
	private void handleInterruptedException(TaskID id) {
		Log.e(LOG_TAG, "ParaTask exception in background task: ", id.getException());
	}
	
	private void handleAllThrowables(TaskID id) {
		Toast.makeText(getApplication(), "Exception caught in background task:\n" 
				+ id.getException().getMessage(), 1).show();
	}
    
	private void receiveProgress(TaskID id, String info) {
		Log.i(LOG_TAG, "ParaTask receiveProgress: " + id.getProgress() + " " + info);
		Toast.makeText(this, info, Toast.LENGTH_LONG).show();
	}

	private void onTaskComplete() {
		Log.i(LOG_TAG, "ParaTask onTaskComplete");
		Toast.makeText(this, "Complete!", Toast.LENGTH_LONG).show();
	}
 
    @Override
    public void onDestroy() {
    	Log.i(LOG_TAG, "ParaTask onDestroy");
        Toast.makeText(this, "ParaService Destroyed", Toast.LENGTH_LONG).show();
    }
    
	TASK private void countingTask() throws InterruptedException {
		Log.i(LOG_TAG, "ParaTask countingTask");
		int max = 20;
		for (int n = 0; n < max; n++) {			
			Thread.sleep(1000);
			globalVar++;
			
			int progress = (int) ((n + 1.0) / max * 100);

			if (globalVar % 5 == 0) {
				CurrentTask.setProgress(progress);
				CurrentTask.publishInterim("Current number: " + globalVar);
				Log.i(LOG_TAG, "ParaTask countingTask publishInterim");
			}
		}
	}
}
