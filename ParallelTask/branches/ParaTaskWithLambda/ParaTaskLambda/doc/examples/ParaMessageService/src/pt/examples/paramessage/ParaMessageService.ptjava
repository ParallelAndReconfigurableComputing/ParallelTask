package pt.examples.paramessage;

import java.text.SimpleDateFormat;

import pt.runtime.TaskID;

import android.app.Service;
import android.content.Intent;
import android.os.IBinder;
import android.util.Log;

public class ParaMessageService extends Service {
	private static final String PT_INTENT_ACTION_BIND_MESSAGE_SERVICE = "pt.intent.action.bindMessageService";
	private final static String LOG_TAG = ParaMessageService.class.getCanonicalName();

	int globalVar = 0;
	
	@Override
	public void onCreate() {
		super.onCreate();
		Log.i(LOG_TAG,"ParaTask: The ParaMessageService was created.");
		
		TaskID taskid = countingTask()
				notifyInterim(receiveProgress(TaskID,String))
				notify(onTaskComplete())
				asyncCatch(InterruptedException handleInterruptedException(TaskID),
						Throwable handleAllThrowables(TaskID));
	}

	@Override
	public IBinder onBind(Intent intent) {
		if(PT_INTENT_ACTION_BIND_MESSAGE_SERVICE.equals(intent.getAction())) {
			Log.i(LOG_TAG,"ParaTask: The ParaMessageService was binded.");
			return new TimeMessageService(this);
		}
		return null;
	}

	String getStringForRemoteService() {
		return "Current count: " + this.globalVar + "\n" + getString(R.string.time_message) + (new SimpleDateFormat(" hh:mm:ss").format(System.currentTimeMillis()));
	}
	

	private void handleInterruptedException(TaskID id) {
		Log.e(LOG_TAG, "ParaTask: exception in background task: ", id.getException());
	}
	
	private void handleAllThrowables(TaskID id) {
		Log.e(LOG_TAG, "ParaTask: exception caught in background task", id.getException());
	}
    
	private void receiveProgress(TaskID id, String info) {
		Log.e(LOG_TAG, "ParaTask: receiveProgress: " + id.getProgress() + " " + info);
	}

	private void onTaskComplete() {
		Log.e(LOG_TAG, "ParaTask: onTaskComplete");
	}
 
    @Override
    public void onDestroy() {
        Log.e(LOG_TAG, "ParaTask: onDestroy");
    }
    
	TASK private void countingTask() throws InterruptedException {
		int max = 100;
		for (int n = 0; n < max; n++) {			
			Thread.sleep(500);
			globalVar++;
			
			int progress = (int) ((n + 1.0) / max * 100);

			if (globalVar % 5 == 0) {
				CurrentTask.setProgress(progress);
				CurrentTask.publishInterim("Current number: " + globalVar);	  
			}
		}
	}
}
