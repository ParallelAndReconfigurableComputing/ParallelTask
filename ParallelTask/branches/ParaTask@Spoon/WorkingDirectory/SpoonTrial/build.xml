<?xml version="1.0" encoding="UTF-8" ?>
<project name="ParaTaskWithAnnotations" default="main" basedir=".">

	<property name="src.dir"      value="src"  />
	<property name="test.dir"     value="test" />
	<property name="dist.dir"     value="dist" />
	<property name="docs.dir"     value="docs" />
	<property name="release.dir"  value="release" />
	<property name="gen.dir"      value="${dist.dir}/gen" />
	<property name="classes.dir"  value="${dist.dir}/classes" />
	<property name="lib.dir"      value="libs" />
	
	<property name="spoon.jar"    value="${lib.dir}/spoon-core-5.0.2-jar-with-dependencies.jar"/>
	<property name="PT.jar"		  value="${lib.dir}/PTLambda-Runtime-1.1.0.jar"/>
	<property name="APTJarName"     value="@PT-1.0.0" />

	<!-- Check the operating system -->
	<target name="CheckOS">
		<condition property="isWindows">
			<os family="windows" />
		</condition>
		
		<condition property="isLinux">
			<os family="unix" />
		</condition>
	</target>
	
	<!-- Decide about the path delimiter based on OS -->
	<target name="WinDelimiter" depends="CheckOS" if="isWindows">
		<property name="Delim" value=";" />
		<echo message="Operating system is Windows, delimiter is ;"></echo>
	</target>
	
	<target name="LinDelimiter" depends="CheckOS" if="isLinux">
		<property name="Delim" value=":" />	
		<echo message="Operating system is Linux, delimiter is :"></echo>
	</target>
	
 	<!-- At this stage the delimiter is decided -->
	<target name="clean" depends="WinDelimiter, LinDelimiter" >
	 	<delete dir="${dist.dir}" />
		<delete dir="${classes.dir}" />
		<delete dir="${gen.dir}" />
		<delete dir="${docs.dir}" />
 	</target>
		
	<target name="init" depends="clean" description="Creating the folders.">
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${classes.dir}" />
		<mkdir dir="${gen.dir}"  />
		<mkdir dir="${docs.dir}" />
		<mkdir dir="${release.dir}"/>
	</target>

	<target name="compile" depends="init" description="Compiles the java code">
		<javac includeantruntime="true" srcdir="${src.dir}" destdir="${classes.dir}">
			<classpath>
				<pathelement location="${spoon.jar}" />
				<pathelement location="${PT.jar}"/>
			</classpath>
		</javac>
	</target>
	
	<target name="compressJar" depends="compile" description="compress compiled files into jar">
		<jar basedir="${classes.dir}" destfile="${release.dir}/${APTJarName}.jar">
			<zipgroupfileset dir="${lib.dir}" includes="**/*.jar"/>
		</jar>
	</target>
	
	<target name="javaDoc" depends="compile" description="creating the javaDoc">
		<javadoc sourcepath="${src.dir}" destdir="${docs.dir}">
			<fileset dir="${src.dir}">
				<include name="**/**"/>
			</fileset>
			<classpath>
				<pathelement path="${lib.dir}/${spoon.jar}"/>
				<pathelement path="${lib.dir}/${PT.jar}"/>
			</classpath>  
		</javadoc>
	</target>
	
	<target name="docJar" depends="javaDoc" description="compressing javaDoc into jar">
		<jar basedir="${docs.dir}" destfile="${release.dir}/${APTJarName}-docs.jar" />
	</target>
	
	<target name="srcJar" depends="init" description="compressing source files into jar">
		<jar basedir="${src.dir}" destfile="${release.dir}/${APTJarName}-src.jar" />
	</target>

	
	<target name="process" depends="compressJar, docJar, srcJar" description="Process the annotated code">
		<!-- <exec executable="java">
			<arg line="-cp ${spoon.jar}${Delim}dist/classes spoon.Launcher -o ${gen.dir} -i input/test/FutureArrayTest.java -p sp.processors.ArrayProcessor" />
		</exec> -->
		<exec executable="java">
			<arg line="-cp ${PT.jar}${Delim}${spoon.jar}${Delim}dist/classes spoon.Launcher -o ${gen.dir} -i input -p sp.processors.PtFutureProcessor" />
		</exec> 
	</target>
	
	<target name="main" depends="process">
		<description>Main Target</description>
	</target>
</project>
