#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\begin_preamble

\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 1cm
\bottommargin 2cm
\headsep 2cm
\footskip 0.5cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 2
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
A Comprehensive Reduction Java Library for Java
\end_layout

\begin_layout Author
Mostafa Mehrabi, Oliver Sinnen, Nasser Giacaman
\begin_inset Newline newline
\end_inset

mmeh012@aucklanduni.ac.nz, o.sinnen, n.giacaman{@auckland.ac.nz}
\begin_inset Newline newline
\end_inset

The University of Auckland -- Engineering Depratment
\begin_inset Newline newline
\end_inset

New Zealand
\end_layout

\begin_layout Abstract
Reduction in computer science is the process of combining two or more elements
 into one.
 This process is widely used by network based applications for integrating
 results from different computers of a network.
 It also seems reasonable to use the same mechanism in shared memory application
s that run on a single computer.
 That is, reducing the results that are obtained from different processors
 of a computer into the final result.
 However, there are not many libraries that facilitate reduction on single
 computers, as the main focus has been on network based applications thus
 far.
 
\end_layout

\begin_layout Abstract
Considering the benefits of reduction for improving performance on shared
 memory applications, developing assistant libraries in this scope is quite
 worth while.
 In this paper we have introduced an extensive reduction library that was
 developed under Java.
 The object oriented considerations of the design have been explained, and
 it has been clarified how users benefit from them.
 Moreover, we have compared the features provided by our design with a few
 others that are available in this field.
 Further examples in this paper help with clearer understanding of the logic
 of our design.
 
\end_layout

\begin_layout Abstract
\begin_inset VSpace defskip
\end_inset

Key words: Reduction, ParallelIterator, Shared Memory
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
Fast technological growth has improved the accuracy of computations substantiall
y due to the large amount of detailed data that we are able to collect now.
 Subsequently, the calculations that are performed on data are now more
 expensive in terms of resources.
 That is, there are considerably more resources required for performing
 computations than it used to be.
 Therefore, speed of computation (i.e.
 performance) is limited by the boundaries set by our resources.
 On a single computer, the number of CPU cycles can only be increased up
 to a certain extent due to physical limitations.
 Because of the problem thereof, many applications are moving on cloud where
 a network of computers can work on different parts of a task; however there
 are still limitations regarding the number of machines and data storage
 provided by a cloud network.
 
\end_layout

\begin_layout Standard
The limitations mentioned above encourage endeavors for more efficient use
 of resources in order to improve performance as much as possible, and that
 is where parallel processing becomes important.
 That is, parallel contribution of different processors (on a single computer),
 or different computers (on a cloud network) to a problem speeds the performance
 of a computational task up.
 In this procedure each of the parallel components provides a partial result,
 which needs to be integrated with that of other components in order to
 figure out the final result.
 The stage of integrating the results from different components of a computation
 task is called 
\shape italic
reduction
\shape default
.
 
\end_layout

\begin_layout Standard
The concept of parallel processing has been vastly used in network based
 applications, but has recently become an interest for shared memory application
s (i.e.
 on single computers).
 A basic search about reduction on internet provides us with numerous links
 to articles that are mostly focused on network applications (e.g.
 
\begin_inset CommandInset citation
LatexCommand citet
key "Hung,Abou"

\end_inset

).
 For example, search based algorithms used by Google and Hadoop exploit
 reductions extensively in order to integrate the search results that are
 returned from several nodes (i.e.
 computers) in their network into one final result (
\begin_inset CommandInset citation
LatexCommand citet
key "Google,Hadoop"

\end_inset

).
\end_layout

\begin_layout Standard
However, as the potential for using reduction on shared memory applications
 is increasingly growing, the demand for rich assistant libraries has not
 been fulfilled reciprocally by different programming languages.
 OpenMP is one library which has been providing this feature for C/C++ and
 Fortran programming languages.
 Nevertheless, its support for reduction is limited about which we have
 elaborately explained in later sections of this paper.
 Moreover, lack of such a library is even more obvious for programming languages
 such as Java, as Java support for reduction is very primitive (
\begin_inset CommandInset citation
LatexCommand citet
key "JavaDoc"

\end_inset

).
 
\end_layout

\begin_layout Standard
We have integrated complex reduction approaches that are normally used by
 network applications with simple trivial reductions, and have provided
 an extensive reduction library that can be used for both shared memory
 and network cases.
 Moreover, we have considered object oriented principles in order to let
 programmers flexibly extend the reduction functionality.
\end_layout

\begin_layout Standard
In Section 2.
 we have discussed some of the common reduction approaches and their use-cases.
 In Section 3.
 we have overviewed the reduction provided by OpenMP, and have further discussed
 its limitations.
 In Section 4.
 our design approach has been elaborately explained, and few use-case examples
 have been provided in Section 5.
 in order to clarify the advantages of our design.
 Finally, in Section 6.
 we have discussed the outcomes of this paper as the conclusion.
\end_layout

\begin_layout Section
Common Reduction Paradigms
\end_layout

\begin_layout Subsection
Counting
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "Bibliography"
options "plainnat"

\end_inset


\end_layout

\end_body
\end_document
