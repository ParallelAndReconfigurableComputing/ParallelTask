package pt.examples.paraservice;

import android.app.Service;
import android.content.Intent;
import android.os.IBinder;
import android.util.Log;
import android.widget.Toast;

public class ParaService extends Service {
	
	int globalVar = 0;

	@Override
	public IBinder onBind(Intent intent) {
		// TODO: Return the communication channel to the service.
		throw new UnsupportedOperationException("Not yet implemented");
	}
	
	
	@Override
    public void onCreate() {
        Toast.makeText(this, "The ParaService process was Created!", Toast.LENGTH_LONG).show();
       
    }
 
    @Override
    public void onStart(Intent intent, int startId) {
    	// For time consuming an long tasks you can launch a new thread here...
        Toast.makeText(this, "ParaService Started", Toast.LENGTH_LONG).show();
        
		TaskID taskid = countingTask()
				notifyInterim(receiveProgress(TaskID,String))
				notify(onTaskComplete())
				asyncCatch(InterruptedException handleInterruptedException(TaskID),
						Throwable handleAllThrowables(TaskID));
    }
    
	private void handleInterruptedException(TaskID id) {
		Log.e("exception in background task: ", id.getException().getMessage());
	}
	
	private void handleAllThrowables(TaskID id) {
		Toast.makeText(getApplication(), "Exception caught in background task:\n" 
				+ id.getException().getMessage(), 1).show();
	}
    
	private void receiveProgress(TaskID id, String info) {
		Toast.makeText(this, info, Toast.LENGTH_LONG).show();
	}

	private void onTaskComplete() {
		Toast.makeText(this, "Complete!", Toast.LENGTH_LONG).show();
	}
 
    @Override
    public void onDestroy() {
        Toast.makeText(this, "ParaService Destroyed", Toast.LENGTH_LONG).show();
    }
    
	TASK private void countingTask() throws InterruptedException {
		int max = 20;
		for (int n = 0; n < max; n++) {			
			Thread.sleep(1000);
			globalVar++;
			
			int progress = (int) ((n + 1.0) / max * 100);

			if (globalVar % 5 == 0) {
				CurrentTask.setProgress(progress);
				CurrentTask.publishInterim("Current number: " + globalVar);	  
			}
		}
	}
}
